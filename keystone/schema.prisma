// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                 String    @id @default(uuid()) @postgresql.Uuid
  name               String    @default("")
  email              String    @unique @default("")
  password           String
  entries            Entry[]   @relation("Entry_createdBy")
  createdAt          DateTime? @default(now())
  role               String
  companies          Company[] @relation("User_companies")
  from_Company_users Company[] @relation("Company_users")
}

model Entry {
  id          String       @id @default(uuid()) @postgresql.Uuid
  createdAt   DateTime     @default(now())
  createdBy   User?        @relation("Entry_createdBy", fields: [createdById], references: [id])
  createdById String?      @map("createdBy") @postgresql.Uuid
  entryId     Int?
  date        DateTime?    @postgresql.Date
  description String       @default("")
  lineItems   LineItem[]   @relation("Entry_lineItems")
  attachments Attachment[] @relation("Entry_attachments")

  @@index([createdById])
}

model LineItem {
  id                   String   @id @default(uuid()) @postgresql.Uuid
  account              Account? @relation("LineItem_account", fields: [accountId], references: [id])
  accountId            String?  @map("account") @postgresql.Uuid
  type                 String
  amount               Decimal  @postgresql.Decimal(18, 2)
  description          String   @default("")
  from_Entry_lineItems Entry[]  @relation("Entry_lineItems")

  @@index([accountId])
}

model Attachment {
  id                     String  @id @default(uuid()) @postgresql.Uuid
  name                   String  @default("")
  description            String  @default("")
  file_filesize          Int?
  file_filename          String?
  from_Entry_attachments Entry[] @relation("Entry_attachments")
}

model Account {
  id                      String     @id @default(uuid()) @postgresql.Uuid
  account                 Int?
  type                    String
  name                    String     @default("")
  description             String     @default("")
  vatAmount               Decimal?   @postgresql.Decimal(18, 2)
  vatAccount              Account?   @relation("Account_vatAccount", fields: [vatAccountId], references: [id])
  vatAccountId            String?    @map("vatAccount") @postgresql.Uuid
  from_LineItem_account   LineItem[] @relation("LineItem_account")
  from_Account_vatAccount Account[]  @relation("Account_vatAccount")

  @@index([vatAccountId])
}

model Company {
  id                  String @id @default(uuid()) @postgresql.Uuid
  name                String @default("")
  addressStreet       String @default("")
  addressPostalCode   String @default("")
  addressCity         String @default("")
  addressCountry      String @default("")
  phone               String @default("")
  email               String @default("")
  website             String @default("")
  businessID          String @default("")
  vatNumber           String @default("")
  users               User[] @relation("Company_users")
  from_User_companies User[] @relation("User_companies")
}
