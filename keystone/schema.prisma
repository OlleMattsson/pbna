// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                      String         @id @default(uuid()) @postgresql.Uuid
  name                    String         @default("")
  email                   String         @unique @default("")
  password                String
  createdAt               DateTime?      @default(now())
  role                    String
  organizations           Organization[] @relation("User_organizations")
  from_Entry_createdBy    Entry[]        @relation("Entry_createdBy")
  from_LineItem_createdBy LineItem[]     @relation("LineItem_createdBy")
  from_Organization_owner Organization[] @relation("Organization_owner")
  from_Organization_users Organization[] @relation("Organization_users")
}

model Entry {
  id          String        @id @default(uuid()) @postgresql.Uuid
  createdAt   DateTime      @default(now())
  createdBy   User?         @relation("Entry_createdBy", fields: [createdById], references: [id])
  createdById String?       @map("createdBy") @postgresql.Uuid
  owner       Organization? @relation("Entry_owner", fields: [ownerId], references: [id])
  ownerId     String?       @map("owner") @postgresql.Uuid
  date        DateTime      @postgresql.Date
  entryNumber Int
  description String        @default("")
  lineItems   LineItem[]    @relation("Entry_lineItems")
  attachments Attachment[]  @relation("Entry_attachments")

  @@index([createdById])
  @@index([ownerId])
}

model LineItem {
  id                   String        @id @default(uuid()) @postgresql.Uuid
  createdAt            DateTime      @default(now())
  createdBy            User?         @relation("LineItem_createdBy", fields: [createdById], references: [id])
  createdById          String?       @map("createdBy") @postgresql.Uuid
  owner                Organization? @relation("LineItem_owner", fields: [ownerId], references: [id])
  ownerId              String?       @map("owner") @postgresql.Uuid
  date                 DateTime?     @postgresql.Date
  account              Account?      @relation("LineItem_account", fields: [accountId], references: [id])
  accountId            String?       @map("account") @postgresql.Uuid
  type                 String
  amount               Decimal       @postgresql.Decimal(18, 2)
  description          String        @default("")
  from_Entry_lineItems Entry[]       @relation("Entry_lineItems")

  @@index([createdById])
  @@index([ownerId])
  @@index([accountId])
}

model Attachment {
  id                     String  @id @default(uuid()) @postgresql.Uuid
  name                   String  @default("")
  description            String  @default("")
  file_filesize          Int?
  file_filename          String?
  ocrData                Json    @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  inferredData           String  @default("")
  from_Entry_attachments Entry[] @relation("Entry_attachments")
}

model AccountChart {
  id                                 String             @id @default(uuid()) @postgresql.Uuid
  name                               String             @default("")
  description                        String             @default("")
  accounts                           Account[]          @relation("AccountChart_accounts")
  from_AccountingPeriod_accountChart AccountingPeriod[] @relation("AccountingPeriod_accountChart")
}

model Account {
  id                         String         @id @default(uuid()) @postgresql.Uuid
  account                    Int?
  name                       String         @default("")
  description                String         @default("")
  type                       String
  vatAmount                  Decimal?       @postgresql.Decimal(18, 2)
  vatAccount                 Account?       @relation("Account_vatAccount", fields: [vatAccountId], references: [id])
  vatAccountId               String?        @map("vatAccount") @postgresql.Uuid
  from_LineItem_account      LineItem[]     @relation("LineItem_account")
  from_AccountChart_accounts AccountChart[] @relation("AccountChart_accounts")
  from_Account_vatAccount    Account[]      @relation("Account_vatAccount")

  @@index([vatAccountId])
}

model AccountingPeriod {
  id             String        @id @default(uuid()) @postgresql.Uuid
  label          String        @default("")
  organization   Organization? @relation("AccountingPeriod_organization", fields: [organizationId], references: [id])
  organizationId String?       @map("organization") @postgresql.Uuid
  accountChart   AccountChart? @relation("AccountingPeriod_accountChart", fields: [accountChartId], references: [id])
  accountChartId String?       @map("accountChart") @postgresql.Uuid
  startDate      DateTime?     @postgresql.Date
  endDate        DateTime?     @postgresql.Date

  @@index([organizationId])
  @@index([accountChartId])
}

model Organization {
  id                                 String             @id @default(uuid()) @postgresql.Uuid
  name                               String             @default("")
  addressStreet                      String             @default("")
  addressPostalCode                  String             @default("")
  addressCity                        String             @default("")
  addressCountry                     String             @default("")
  phone                              String             @default("")
  email                              String             @default("")
  website                            String             @default("")
  businessID                         String             @default("")
  vatNumber                          String             @default("")
  owner                              User?              @relation("Organization_owner", fields: [ownerId], references: [id])
  ownerId                            String?            @map("owner") @postgresql.Uuid
  users                              User[]             @relation("Organization_users")
  from_User_organizations            User[]             @relation("User_organizations")
  from_Entry_owner                   Entry[]            @relation("Entry_owner")
  from_LineItem_owner                LineItem[]         @relation("LineItem_owner")
  from_AccountingPeriod_organization AccountingPeriod[] @relation("AccountingPeriod_organization")

  @@index([ownerId])
}
